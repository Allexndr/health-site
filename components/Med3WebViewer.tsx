'use client'

import React, { useRef, useEffect, useState } from 'react'
import { toast } from 'sonner'
import { 
  EyeIcon,
  CubeIcon,
  PhotoIcon,
  ArrowUpTrayIcon,
  AdjustmentsHorizontalIcon,
  ExclamationTriangleIcon,
  InformationCircleIcon
} from '@heroicons/react/24/outline'

interface Med3WebViewerProps {
  onFileLoaded?: (fileName: string) => void
  onError?: (error: Error) => void
}

declare global {
  interface Window {
    Med3Web: any
    jQuery: any
    $: any
  }
}

export default function Med3WebViewer({ onFileLoaded, onError }: Med3WebViewerProps) {
  const containerRef = useRef<HTMLDivElement>(null)
  const [isLoading, setIsLoading] = useState(false)
  const [loadedFile, setLoadedFile] = useState<string | null>(null)
  const [showSettings, setShowSettings] = useState(false)
  const [viewer, setViewer] = useState<any>(null)
  const [isMed3WebLoaded, setIsMed3WebLoaded] = useState(false)

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º Med3Web —Å–∫—Ä–∏–ø—Ç
    const loadMed3Web = async () => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ Med3Web
        if (window.Med3Web) {
          console.log('‚úÖ Med3Web —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω')
          setIsMed3WebLoaded(true)
          initializeViewer()
          return
        }

        console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ Med3Web...')
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º Med3Web wrapper
        const script = document.createElement('script')
        script.src = '/med3web/med3web-wrapper.js'
        script.onload = () => {
          console.log('‚úÖ Med3Web wrapper –∑–∞–≥—Ä—É–∂–µ–Ω')
          
          // –ñ–¥–µ–º —Å–æ–±—ã—Ç–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
          const handleReady = () => {
            console.log('‚úÖ Med3Web –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é')
            setIsMed3WebLoaded(true)
            initializeViewer()
            window.removeEventListener('med3web-ready', handleReady)
          }
          
          window.addEventListener('med3web-ready', handleReady)
          
          // –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ —É–∂–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ
          if (window.Med3Web) {
            handleReady()
          }
        }
        script.onerror = (error) => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Med3Web wrapper:', error)
          onError?.(new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Med3Web'))
        }
        document.head.appendChild(script)
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Med3Web:', error)
        onError?.(error as Error)
      }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—ã—á–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
    const loadScript = (src: string): Promise<void> => {
      return new Promise((resolve, reject) => {
        const script = document.createElement('script')
        script.src = src
        script.onload = () => resolve()
        script.onerror = () => reject(new Error(`Failed to load script: ${src}`))
        document.head.appendChild(script)
      })
    }

    loadMed3Web()
  }, [])

  const initializeViewer = () => {
    if (!containerRef.current || !window.Med3Web) return

    try {
      console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Med3Web viewer...')
      
      // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      containerRef.current.innerHTML = ''
      
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è Med3Web
      const viewerContainer = document.createElement('div')
      viewerContainer.id = 'med3web-container'
      viewerContainer.style.width = '100%'
      viewerContainer.style.height = '100%'
      
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è 2D –∏ 3D —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
      const container2d = document.createElement('div')
      container2d.id = 'med3web-container-2d'
      container2d.style.width = '100%'
      container2d.style.height = '100%'
      
      const container3d = document.createElement('div')
      container3d.id = 'med3web-container-3d'
      container3d.style.width = '100%'
      container3d.style.height = '100%'
      
      viewerContainer.appendChild(container2d)
      viewerContainer.appendChild(container3d)
      containerRef.current.appendChild(viewerContainer)

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Med3Web wrapper
      const med3webViewer = window.Med3Web
      med3webViewer.init(container2d, container3d)
      
      setViewer(med3webViewer)

      console.log('‚úÖ Med3Web viewer –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ viewer:', error)
      onError?.(error as Error)
    }
  }

  const checkFileFormat = (file: File): string => {
    const fileName = file.name.toLowerCase()
    const fileExtension = fileName.split('.').pop()
    
    console.log('üîç –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞:', fileName, '–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ:', fileExtension)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º OneVolumeViewer —Ñ–æ—Ä–º–∞—Ç—ã
    if (fileName.includes('.ct') || fileName.includes('onevolumeviewer') || fileName.includes('.vol')) {
      return 'onevolumeviewer'
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º DICOM —Ñ–æ—Ä–º–∞—Ç—ã
    if (fileExtension === 'dcm' || fileExtension === 'dicom' || fileName.includes('dicom')) {
      return 'dicom'
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º NIfTI —Ñ–æ—Ä–º–∞—Ç—ã
    if (fileExtension === 'nii' || fileExtension === 'nifti' || fileName.includes('nifti')) {
      return 'nifti'
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Analyze —Ñ–æ—Ä–º–∞—Ç—ã
    if (fileExtension === 'hdr' || fileExtension === 'img' || fileName.includes('analyze')) {
      return 'analyze'
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º KTX —Ñ–æ—Ä–º–∞—Ç—ã
    if (fileExtension === 'ktx' || fileName.includes('ktx')) {
      return 'ktx'
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏–≤—ã
    if (fileExtension === 'zip' || fileExtension === 'rar' || fileExtension === '7z') {
      return 'archive'
    }
    
    // –ï—Å–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ, –ø–æ–ø—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ MIME —Ç–∏–ø—É
    if (file.type) {
      console.log('üìã MIME —Ç–∏–ø —Ñ–∞–π–ª–∞:', file.type)
      
      if (file.type.includes('dicom') || file.type.includes('medical')) {
        return 'dicom'
      }
      
      if (file.type.includes('zip') || file.type.includes('archive')) {
        return 'archive'
      }
    }
    
    console.log('‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞')
    return 'unknown'
  }

  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (!file || !viewer) return

    setIsLoading(true)
    try {
      console.log('ü¶∑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ Med3Web:', file.name)
      
      const fileFormat = checkFileFormat(file)
      console.log('üìÅ –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞:', fileFormat)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ä–º–∞—Ç–µ
      if (fileFormat === 'onevolumeviewer') {
        toast.info('–û–±–Ω–∞—Ä—É–∂–µ–Ω –∞—Ä—Ö–∏–≤ OneVolumeViewer', {
          description: 'Med3Web –º–æ–∂–µ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —ç—Ç–æ—Ç —Ñ–æ—Ä–º–∞—Ç –Ω–∞–ø—Ä—è–º—É—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–≤–ª–µ—á—å DICOM —Ñ–∞–π–ª—ã –∏–∑ –∞—Ä—Ö–∏–≤–∞.',
          duration: 5000
        })
      }
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è Med3Web
      let loadType = 'not assigned'
      switch (fileFormat) {
        case 'dicom':
          loadType = 'local dicom'
          break
        case 'nifti':
          loadType = 'local nifti'
          break
        case 'analyze':
          loadType = 'local hdr'
          break
        case 'ktx':
          loadType = 'local ktx'
          break
        default:
          loadType = 'not assigned'
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Med3Web –∏—Å–ø–æ–ª—å–∑—É—è wrapper API
      if (fileFormat === 'dicom' || fileFormat === 'nifti' || fileFormat === 'analyze' || fileFormat === 'ktx') {
        // –î–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—ã–π –º–µ—Ç–æ–¥
        console.log('üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ —Ñ–æ—Ä–º–∞—Ç–∞:', fileFormat)
        viewer.loadDicomFiles([file])
      } else if (fileFormat === 'archive') {
        // –î–ª—è –∞—Ä—Ö–∏–≤–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        toast.info('–û–±–Ω–∞—Ä—É–∂–µ–Ω –∞—Ä—Ö–∏–≤', {
          description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∫–ª–∞–¥–∫—É "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–æ–≤" –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—Ä—Ö–∏–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.',
          duration: 5000
        })
        throw new Error('–ê—Ä—Ö–∏–≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —á–µ—Ä–µ–∑ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ')
      } else if (fileFormat === 'onevolumeviewer') {
        // –î–ª—è OneVolumeViewer —Ñ–∞–π–ª–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        toast.info('–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–∞–π–ª OneVolumeViewer', {
          description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∫–ª–∞–¥–∫—É "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–æ–≤" –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ DICOM.',
          duration: 5000
        })
        throw new Error('OneVolumeViewer —Ñ–∞–π–ª—ã —Ç—Ä–µ–±—É—é—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ DICOM')
      } else {
        // –î–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        console.log('‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç:', fileFormat, '–§–∞–π–ª:', file.name)
        throw new Error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: ${fileExtension || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`)
      }
      
      setLoadedFile(file.name)
      onFileLoaded?.(file.name)
      
      toast.success(`–§–∞–π–ª "${file.name}" –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Med3Web`, {
        description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞',
        duration: 3000
      })
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      let errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞'
      let errorDescription = error.message
      
      if (error.message.includes('format') || error.message.includes('unsupported')) {
        errorMessage = '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞'
        errorDescription = 'Med3Web –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç DICOM, NIfTI, Analyze –∏ KTX —Ñ–æ—Ä–º–∞—Ç—ã. OneVolumeViewer –∞—Ä—Ö–∏–≤—ã —Ç—Ä–µ–±—É—é—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.'
      }
      
      onError?.(error as Error)
      toast.error(errorMessage, {
        description: errorDescription,
        duration: 5000
      })
    } finally {
      setIsLoading(false)
    }
  }

  const handleUrlLoad = async () => {
    const url = prompt('–í–≤–µ–¥–∏—Ç–µ URL –∫ DICOM —Ñ–∞–π–ª–∞–º:')
    if (!url || !viewer) return

    setIsLoading(true)
    try {
      console.log('üåê –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ URL:', url)
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º wrapper –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ URL
      viewer.loadScene(url, 'dicom')
      
      setLoadedFile(`URL: ${url}`)
      onFileLoaded?.(`URL: ${url}`)
      
      toast.success('–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ URL', {
        description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
        duration: 3000
      })
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ URL:', error)
      onError?.(error as Error)
      toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ URL', {
        description: error.message,
        duration: 5000
      })
    } finally {
      setIsLoading(false)
    }
  }

  const handleDemoData = async () => {
    if (!viewer) return

    setIsLoading(true)
    try {
      console.log('üéÆ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö...')
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–∞–ø–∫–∏ public
      const demoUrl = '/med3web/demo/'
      viewer.loadScene(demoUrl, 'dicom')
      
      setLoadedFile('–î–µ–º–æ –¥–∞–Ω–Ω—ã–µ')
      onFileLoaded?.('–î–µ–º–æ –¥–∞–Ω–Ω—ã–µ')
      
      toast.success('–î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', {
        description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
        duration: 3000
      })
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö:', error)
      toast.error('–î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã', {
        description: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–∞–π–ª',
        duration: 3000
      })
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <div className="relative w-full h-full bg-black rounded-lg overflow-hidden">
      {/* Med3Web Container */}
      <div 
        ref={containerRef} 
        className="w-full h-full"
        style={{ minHeight: '600px' }}
      />

      {/* Controls Overlay */}
      <div className="absolute top-4 left-4 flex flex-col gap-2">
        {/* File Upload */}
        <div className="bg-black/80 backdrop-blur-sm rounded-lg p-3">
          <label className="flex items-center gap-2 cursor-pointer text-white hover:text-blue-400 transition-colors">
            <ArrowUpTrayIcon className="w-5 h-5" />
            <span className="text-sm">–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª</span>
            <input
              type="file"
              accept=".dcm,.dicom,.nii,.nifti,.hdr,.img,.ktx,.zip,.rar,.7z,.vol,.ct"
              onChange={handleFileUpload}
              className="hidden"
              disabled={isLoading || !isMed3WebLoaded}
            />
          </label>
        </div>

        {/* URL Load */}
        <button
          onClick={handleUrlLoad}
          disabled={isLoading || !isMed3WebLoaded}
          className="bg-black/80 backdrop-blur-sm rounded-lg p-3 text-white hover:text-blue-400 transition-colors flex items-center gap-2 disabled:opacity-50"
        >
          <PhotoIcon className="w-5 h-5" />
          <span className="text-sm">–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ URL</span>
        </button>

        {/* Demo Data */}
        <button
          onClick={handleDemoData}
          disabled={isLoading || !isMed3WebLoaded}
          className="bg-black/80 backdrop-blur-sm rounded-lg p-3 text-white hover:text-green-400 transition-colors flex items-center gap-2 disabled:opacity-50"
        >
          <CubeIcon className="w-5 h-5" />
          <span className="text-sm">–î–µ–º–æ –¥–∞–Ω–Ω—ã–µ</span>
        </button>

        {/* Settings Toggle */}
        <button
          onClick={() => setShowSettings(!showSettings)}
          className="bg-black/80 backdrop-blur-sm rounded-lg p-3 text-white hover:text-blue-400 transition-colors flex items-center gap-2"
        >
          <AdjustmentsHorizontalIcon className="w-5 h-5" />
          <span className="text-sm">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
        </button>

        {/* Current File Info */}
        {loadedFile && (
          <div className="bg-green-900/80 backdrop-blur-sm rounded-lg p-3 text-white">
            <div className="flex items-center gap-2 text-sm">
              <CubeIcon className="w-4 h-4" />
              <span>–ó–∞–≥—Ä—É–∂–µ–Ω: {loadedFile}</span>
            </div>
          </div>
        )}

        {/* Loading Status */}
        {!isMed3WebLoaded && (
          <div className="bg-yellow-900/80 backdrop-blur-sm rounded-lg p-3 text-white">
            <div className="flex items-center gap-2 text-sm">
              <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
              <span>–ó–∞–≥—Ä—É–∑–∫–∞ Med3Web...</span>
            </div>
          </div>
        )}
      </div>

      {/* Loading Indicator */}
      {isLoading && (
        <div className="absolute inset-0 bg-black/50 flex items-center justify-center">
          <div className="bg-white rounded-lg p-4 flex items-center gap-3">
            <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600"></div>
            <span className="text-gray-700">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</span>
          </div>
        </div>
      )}

      {/* Settings Panel */}
      {showSettings && (
        <div className="absolute top-4 right-4 bg-black/90 backdrop-blur-sm rounded-lg p-4 text-white min-w-[320px] max-h-[80vh] overflow-y-auto">
          <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
            <EyeIcon className="w-5 h-5" />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Med3Web
          </h3>

          <div className="space-y-4">
            <div className="text-sm text-gray-300">
              <p className="mb-2 font-medium">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:</p>
              <ul className="space-y-1 text-xs">
                <li>‚Ä¢ DICOM (.dcm, .dicom)</li>
                <li>‚Ä¢ NIfTI (.nii, .nifti)</li>
                <li>‚Ä¢ Analyze (.hdr, .img)</li>
                <li>‚Ä¢ KTX (.ktx)</li>
                <li>‚Ä¢ –ê—Ä—Ö–∏–≤—ã (.zip, .rar, .7z)</li>
                <li>‚Ä¢ OneVolumeViewer (.vol, .ct)</li>
              </ul>
            </div>

            <div className="text-sm text-gray-300">
              <p className="mb-2 font-medium">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</p>
              <ul className="space-y-1 text-xs">
                <li>‚Ä¢ 2D —Å—Ä–µ–∑—ã (–∞–∫—Å–∏–∞–ª—å–Ω—ã–π, —Å–∞–≥–∏—Ç—Ç–∞–ª—å–Ω—ã–π, –∫–æ—Ä–æ–Ω–∞–ª—å–Ω—ã–π)</li>
                <li>‚Ä¢ 3D –æ–±—ä–µ–º–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥</li>
                <li>‚Ä¢ MIP (Maximum Intensity Projection)</li>
                <li>‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Window/Level</li>
                <li>‚Ä¢ –ò–∑–º–µ—Ä–µ–Ω–∏—è –∏ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏</li>
                <li>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤</li>
                <li>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞</li>
              </ul>
            </div>

            <div className="bg-yellow-900/20 border border-yellow-600/30 rounded-lg p-3">
              <div className="flex items-start gap-2">
                <ExclamationTriangleIcon className="w-4 h-4 text-yellow-400 mt-0.5 flex-shrink-0" />
                <div className="text-xs text-yellow-200">
                  <p className="font-medium mb-1">OneVolumeViewer –∞—Ä—Ö–∏–≤—ã</p>
                  <p>Med3Web –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—Ä—Ö–∏–≤—ã OneVolumeViewer –Ω–∞–ø—Ä—è–º—É—é. –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–π 3D viewer.</p>
                </div>
              </div>
            </div>

            <div className="bg-blue-900/20 border border-blue-600/30 rounded-lg p-3">
              <div className="flex items-start gap-2">
                <InformationCircleIcon className="w-4 h-4 text-blue-400 mt-0.5 flex-shrink-0" />
                <div className="text-xs text-blue-200">
                  <p className="font-medium mb-1">–°–æ–≤–µ—Ç</p>
                  <p>–î–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ 3D —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ DICOM —Ñ–∞–π–ª—ã —Å –≤—ã—Å–æ–∫–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º.</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
} 